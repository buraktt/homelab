services:
  blinko-frontend:
    image: blinkospace/blinko:latest
    container_name: blinko-frontend
    environment:
      NODE_ENV: production
      # NEXTAUTH_URL: http://blinko.home
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@blinko-postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./blinko:/app/.blinko 
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - 1111:1111
    healthcheck:
      test: ["CMD", "curl", "-f", "http://blinko-frontend:1111/"]
      interval: 30s
      timeout: 10s   
      retries: 5     
      start_period: 30s 
    networks:
      - blinko-network

  postgres:
    image: postgres:14
    container_name: blinko-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Europe/Berlin
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - blinko-network

networks:
    blinko-network:
      driver: bridge